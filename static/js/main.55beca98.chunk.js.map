{"version":3,"sources":["Login.js","Home.js","App.js","serviceWorker.js","index.js"],"names":["Title","styled","div","HintText","LoginWrapper","StyledForm","form","StyledFormGroup","FormGroup","StyledFormLabel","FormLabel","ErrorText","props","isShow","Overlay","BackgroundVideo","StyledButton","Button","Login","handleUsernameChange","_value","setState","username","isValidated","handlePasswordChange","password","handleOnSubmit","e","state","history","push","process","preventDefault","stopPropagation","this","onSubmit","validated","controlId","bsSize","FormControl","autoFocus","type","value","placeholder","required","onChange","target","block","React","Component","Text","Link","a","SmallText","AppWrapper","ProfilePicWrapper","ProfilePic","img","ProfileWrapper","ProfileInfo","Home","handleCheckIn","checked_in","handleAttendWorkshops","console","log","getProfile","profile","rawDate","Date","next_shift","name","src","profile_pic","id","bio","onClick","num_workshops_attended","href","sponsor_company_link","sponsor_company","toLocaleString","phone_number","axios","get","then","res","data","catch","err","App","basename","path","exact","component","withRouter","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.55beca98.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { Button, FormGroup, FormControl, FormLabel } from 'react-bootstrap';\n\nexport const Title = styled.div`\n  font-size: 20px;\n  margin-bottom: 20px;\n  color: white;\n`;\n\nconst HintText = styled.div`\n  margin-top: 10px;\n  margin-bottom: 10px;\n  font-size: 12px;\n  font-style: italic;\n  color: white;\n`;\n\nconst LoginWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  align-items: center;\n  height: 100vh;\n  position: absolute;\n  z-index: 3;\n  top: 0;\n  right: 0;\n  left: 0;\n  bottom: 0;\n  padding: 20px;\n`;\n\nconst StyledForm = styled.form`\n  width: 30%;\n  @media screen and (max-width: 600px) {\n    width: 100%;\n  }\n`;\n\nconst StyledFormGroup = styled(FormGroup)`\n  text-align: left;\n`;\n\nconst StyledFormLabel = styled(FormLabel)`\n  font-weight: bold;\n  font-size: 12px;\n  color: white;\n`;\n\nconst ErrorText = styled.div`\n  color: red;\n  margin-top: 10px;\n  margin-bottom: 10px;\n  font-size: 12px;\n  padding: 5px;\n  display: ${props => (props.isShow ? 'block' : 'none')};\n`;\n\nconst Overlay = styled.div`\n  background-color: rgb(0, 0, 0, 0.6);\n  position: absolute;\n  z-index: 2;\n  top: 0;\n  right: 0;\n  left: 0;\n  bottom: 0;\n  opacity: 0.8;\n`;\n\nconst BackgroundVideo = styled.div`\n  background-image: url('https://media1.tenor.com/images/6bf658d3c1df80990a0817b417b78155/tenor.gif?itemid=10503435');\n  background-size: cover;\n  background-repeat: no-repeat;\n  position: absolute;\n  z-index: 1;\n  top: 0;\n  right: 0;\n  left: 0;\n  bottom: 0;\n`;\n\nconst StyledButton = styled(Button)`\n  margin-top: 50px;\n  margin-bottom: 10px;\n`;\n\nexport default class Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      password: '',\n      isValidated: false\n    };\n  }\n\n  handleUsernameChange = _value => {\n    this.setState({\n      username: _value,\n      isValidated: false\n    });\n  };\n\n  handlePasswordChange = _value => {\n    this.setState({\n      password: _value,\n      isValidated: false\n    });\n  };\n\n  handleOnSubmit = e => {\n    const { username, password } = this.state;\n    if (username === 'abc' && password === 'abc') {\n      this.props.history.push(process.env.PUBLIC_URL + '/home');\n    } else {\n      e.preventDefault();\n      e.stopPropagation();\n    }\n    this.setState({ isValidated: true });\n  };\n\n  render() {\n    const { username, password, isValidated } = this.state;\n    return (\n      <>\n        <Overlay />\n        <BackgroundVideo />\n        <LoginWrapper>\n          <Title>Hack the North 2020</Title>\n          <StyledForm onSubmit={this.handleOnSubmit} validated>\n            <StyledFormGroup controlId=\"email\" bsSize=\"large\">\n              <StyledFormLabel>Username</StyledFormLabel>\n              <FormControl\n                autoFocus\n                type=\"username\"\n                value={username}\n                placeholder=\"username\"\n                required\n                onChange={e => this.handleUsernameChange(e.target.value)}\n              />\n              <ErrorText isShow={isValidated}>\n                Please enter a valid username\n              </ErrorText>\n            </StyledFormGroup>\n            <StyledFormGroup controlId=\"password\" bsSize=\"large\">\n              <StyledFormLabel>Password</StyledFormLabel>\n              <FormControl\n                type=\"password\"\n                placeholder=\"password\"\n                value={password}\n                required\n                onChange={e => this.handlePasswordChange(e.target.value)}\n              />\n              <ErrorText isShow={isValidated}>\n                Please enter a valid password\n              </ErrorText>\n            </StyledFormGroup>\n            <StyledButton block bsSize=\"large\" type=\"submit\">\n              Login\n            </StyledButton>\n          </StyledForm>\n          <HintText>Hint: use \"abc\" as the password and username</HintText>\n        </LoginWrapper>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport Button from 'react-bootstrap/Button';\n\nconst Title = styled.div`\n  font-size: 20px;\n  margin-bottom: 20px;\n`;\n\nconst Text = styled.div`\n  margin-bottom: 10px;\n`;\n\nconst Link = styled.a`\n  margin-bottom: 10px;\n`;\n\nconst SmallText = styled.div`\n  font-size: 12px;\n  font-weight: bold;\n  margin-bottom: 5px;\n`;\n\nconst AppWrapper = styled.div`\n  height: 100vh;\n  display: flex;\n  justify-content: left;\n  flex-direction: column;\n  text-align: left;\n  padding: 20px;\n`;\n\nconst ProfilePicWrapper = styled.div`\n  width: 100%;\n  margin-right: 20px;\n  margin-bottom: 20px;\n`;\n\nconst ProfilePic = styled.img`\n  width: 100%;\n`;\n\nconst ProfileWrapper = styled.div`\n  display: flex;\n  @media only screen and (max-width: 600px) {\n    flex-direction: column;\n  }\n`;\n\nconst ProfileInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst StyledButton = styled(Button)`\n  width: 100px;\n  margin-bottom: 10px;\n  font-size: 12px;\n`;\n\nexport default class Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      profile: {},\n      checked_in: false\n    };\n  }\n\n  componentDidMount() {\n    axios\n      .get('https://hackthenorth.netlify.com/api/fe-challenge-attendee')\n      .then(res => res.data)\n      .then(data =>\n        this.setState({\n          profile: data,\n          checked_in: data ? data.checked_in : false\n        })\n      )\n      .catch(err => console.log(err));\n  }\n\n  handleCheckIn = () => {\n    // make post request to update check-in status in database\n    // for now we store check in status in state to change the display\n    // but since that's not required, we will just perform a console.log\n    this.setState({ checked_in: true });\n  };\n\n  handleAttendWorkshops = () => {\n    // we could open a new modal that allows user to pick available workshops\n    // send post request to update db\n    console.log('handle attend workshops');\n  };\n\n  getProfile = () => {\n    const { profile, checked_in } = this.state;\n    const rawDate =\n      profile && profile.type === 'volunteer'\n        ? new Date(profile.next_shift)\n        : '';\n\n    if (profile === null) {\n      return <Title>No profile found</Title>;\n    }\n    // type AttendeeType = \"hacker\" | \"organizer\" | \"volunteer | \"sponsor\";\n    else {\n      return (\n        <AppWrapper>\n          <Title>Welcome back, {profile.name}!</Title>\n          <ProfileWrapper>\n            <ProfilePicWrapper>\n              <ProfilePic src={profile.profile_pic} />\n            </ProfilePicWrapper>\n            <ProfileInfo>\n              <SmallText>Name</SmallText>\n              <Text>{profile.name}</Text>\n              <SmallText>Id</SmallText>\n              <Text>{profile.id}</Text>\n              <SmallText>Role</SmallText>\n              <Text>{profile.type}</Text>\n              <SmallText>Bio</SmallText>\n              <Text>{profile.bio}</Text>\n              <SmallText>Checked In</SmallText>\n              <Text>{checked_in ? 'Yes' : 'No'}</Text>\n              {!checked_in && (\n                <StyledButton onClick={this.handleCheckIn}>\n                  Check In\n                </StyledButton>\n              )}\n              {profile.type === 'hacker' && (\n                <>\n                  <SmallText>Number of Workshops Attended</SmallText>\n                  <Text>{profile.num_workshops_attended}</Text>\n                  <StyledButton onClick={this.handleAttendWorkshops}>\n                    Attend More\n                  </StyledButton>\n                </>\n              )}\n              {profile.type === 'sponsor' && (\n                <>\n                  <SmallText>Sponsor Company</SmallText>\n                  <Link href={profile.sponsor_company_link} target=\"_blank\">\n                    {profile.sponsor_company}\n                  </Link>\n                </>\n              )}\n              {profile.type === 'volunteer' && (\n                <>\n                  <SmallText>Next Shift</SmallText>\n                  <Text>{rawDate.toLocaleString()}</Text>\n                </>\n              )}\n              {profile.type === 'organizer' && (\n                <>\n                  <SmallText>Phone Number</SmallText>\n                  <Link href={`tel:+${profile.phone_number}`}>\n                    {profile.phone_number}\n                  </Link>\n                </>\n              )}\n            </ProfileInfo>\n          </ProfileWrapper>\n        </AppWrapper>\n      );\n    }\n  };\n\n  render() {\n    return <AppWrapper>{this.getProfile()}</AppWrapper>;\n  }\n}\n","import React from 'react';\nimport { BrowserRouter as Router, Route, withRouter } from 'react-router-dom';\nimport Login from './Login';\nimport Home from './Home';\n\nexport default class App extends React.Component {\n  render() {\n    return (\n      <Router basename={process.env.PUBLIC_URL}>\n        <Route path=\"/\" exact component={withRouter(Login)} />\n        <Route path=\"/home\" exact component={withRouter(Home)} />\n      </Router>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}